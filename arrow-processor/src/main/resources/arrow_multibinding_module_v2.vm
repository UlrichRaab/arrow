package ${model.packageName};

import java.util.Map;
import javax.inject.Named;
import dagger.Binds;
import dagger.Module;
import dagger.multibindings.ClassKey;
import dagger.multibindings.IntoMap;
import dagger.multibindings.Multibinds;


/**
 * Add this module to your application component.
 */
@Module(subcomponents = {
#foreach($subcomponentClass in ${model.subcomponentClasses})
    $subcomponentClass#if( $foreach.hasNext ),#end

#end
})
public abstract class ${model.className} {

    @Multibinds
    @Named("arrow://subcomponent-builders")
    public abstract Map<Class<?>, Object> subcomponentBuilders ();

#foreach($method in ${model.bindingMethods})
    @Binds
    @IntoMap
    @Named("arrow://subcomponent-builders")
    @ClassKey(${method.key})
    public abstract Object ${method.name} (${method.builder} builder);
#end
}
